apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: eagleconsole-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: eagleconsole
        version: v1
    spec:
      containers:
        - name: eagleconsole
          image: gcr.io/tranquility-base-images/tb-eagle-console:landingzone
          resources:
            requests:
              cpu: "100m"
          imagePullPolicy: IfNotPresent #Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config-volume
              mountPath: /app/ec-config.yaml
              subPath: ec-config.yaml
            - name: google-cloud-key
              mountPath: /var/secrets/google
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/ec-service-account-config.json
      volumes:
        - name: config-volume
          configMap:
            name: ec-config
        - name: google-cloud-key
          secret:
            secretName: ec-service-account
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: houstonservice-v1
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: houstonservice
        version: v1
    spec:
      containers:
        - name: houstonservice
          image: gcr.io/tranquility-base-images/tb-houston-service:landingzone
          resources:
            requests:
              cpu: "100m"
          imagePullPolicy: IfNotPresent #Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config-volume
              mountPath: /app/ec-config.yaml
              subPath: ec-config.yaml
            - name: google-cloud-key
              mountPath: /var/secrets/google
          env:
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: /var/secrets/google/ec-service-account-config.json
            - name: SQLALCHEMY_DATABASE_URI
              value: mysql+mysqlconnector://eagle-user:eagle-user-secret-pw@mysql57/eagle_db
            - name: SQLALCHEMY_ECHO
              value: "True"
            - name: SQLALCHEMY_TRACK_MODIFICATIONS
              value: "True"
      volumes:
        - name: config-volume
          configMap:
            name: ec-config
        - name: google-cloud-key
          secret:
            secretName: ec-service-account
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: mygateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
    - port:
        number: 80
        name: http
        protocol: HTTP
      hosts:
        - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: houstonservice
spec:
  hosts:
    - "*"
  gateways:
    - mygateway
  http:
    - match:
        - uri:
            prefix: /api
      route:
        - destination:
            host: houstonservice
            port:
              number: 80
      corsPolicy:
        allowOrigin:
          - "*"
        allowMethods:
          - POST
          - GET
          - OPTIONS
          - PUT
          - PATCH
          - DELETE
        allowHeaders:
          - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: eagleconsole
spec:
  hosts:
    - "*"
  gateways:
    - mygateway
  http:
    - route:
        - destination:
            host: eagleconsole
            port:
              number: 80

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: eagleconsole
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
spec:
  host: eagleconsole
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN

---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: houstonservice
  annotations:
    cloud.google.com/load-balancer-type: "Internal"
spec:
  host: houstonservice
  trafficPolicy:
    loadBalancer:
      simple: LEAST_CONN